name: CI/CD Pipeline

on:
  push:
    branches: [main, development, staging]
  pull_request:
    branches: [main, staging]

# Enhanced permissions for private repositories
permissions:
  contents: read
  security-events: write
  actions: read
  id-token: write
  pull-requests: read
  issues: read
  repository-projects: read
  statuses: read
  checks: write

env:
  NODE_VERSION: "20"

jobs:
  # Security and dependency scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      pull-requests: read
      issues: read
      repository-projects: read
      statuses: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # Enhanced checkout for private repositories
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true
          submodules: recursive

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH,MEDIUM"
          exit-code: "0"
          ignore-unfixed: true
        timeout-minutes: 10
        continue-on-error: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-results.sarif') != ''
        with:
          sarif_file: "trivy-results.sarif"
          category: "trivy-security-scan"
          # Enhanced authentication for private repositories
          token: ${{ secrets.GITHUB_TOKEN }}
          # Wait for processing to complete
          wait-for-processing: true
          # Add repository context for private repos
          checkout_path: ${{ github.workspace }}
        continue-on-error: true

      - name: Upload security scan artifacts
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        if: always()
        with:
          name: security-scan-results
          path: trivy-results.sarif
          retention-days: 30

  # Code quality and testing
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    needs: security
    permissions:
      contents: read
      actions: read

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: freenomad_test
          POSTGRES_HOST_AUTH_METHOD: md5
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/freenomad_test
        run: |
          npx prisma generate
          npx prisma db push

      - name: Run ESLint
        run: npm run lint:check
        continue-on-error: false
        timeout-minutes: 10

      - name: Run Prettier check
        run: npm run format:check
        continue-on-error: false
        timeout-minutes: 5

      - name: Run TypeScript check
        run: npm run type-check
        continue-on-error: false
        timeout-minutes: 10

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/freenomad_test
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'test-secret-fallback' }}
          NEXTAUTH_URL: http://localhost:3000
          NODE_ENV: test
        run: npm run test
        continue-on-error: false
        timeout-minutes: 15

      - name: Upload test results
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            test-results/
          retention-days: 7

      - name: Build application
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/freenomad_test
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'test-secret-fallback' }}
          NEXTAUTH_URL: http://localhost:3000
          NODE_ENV: production
        run: npm run build
        continue-on-error: false
        timeout-minutes: 20

      - name: Verify build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi
          echo "Build successful: .next directory exists"
          ls -la .next/

      - name: Upload build artifacts
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # Performance testing
  performance:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      actions: read

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: freenomad_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/freenomad_test
        run: |
          npx prisma generate
          npx prisma db push

      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-files
          path: .next/
        continue-on-error: true

      - name: Run performance tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/freenomad_test
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'test-secret-fallback' }}
          NEXTAUTH_URL: http://localhost:3000
        run: npm run test:e2e:accessibility
        continue-on-error: true

  # Build and package for deployment
  package:
    name: Package Application
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup production database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/freenomad_prod' }}
        run: |
          npx prisma generate
        continue-on-error: true

      - name: Build application
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/freenomad_prod' }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'production-secret-required' }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'https://your-domain.com' }}
        run: npm run build
        continue-on-error: false

      - name: Create deployment package
        run: |
          tar -czf deployment-package.tar.gz \
            .next/ \
            public/ \
            package.json \
            package-lock.json \
            next.config.ts \
            prisma/

      - name: Upload deployment package
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: deployment-package
          path: deployment-package.tar.gz
          retention-days: 30

      - name: Comment build success
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '✅ Build completed successfully. Deployment package ready.'
            })
        continue-on-error: true

  # Notify on failure
  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [security, test, package]
    if: failure()
    permissions:
      contents: read

    steps:
      - name: Notify failure
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '❌ CI pipeline failed. Please check the workflow logs.'
            })
        continue-on-error: true
